Homework

1. Unzip (using the terminal) our ​ titanic.zip​ file to ​ titanic​ ,
>>   unzip titanic.zip -d titanic

2. Provide the shape/dimensions of the file ​ train.csv​ ?
>>   awk -F, 'END {print NR,"\n" NF}' train.csv 

3. List the first 5 rows of the file. Now list the last 5.
>>  head -n 6 train.csv 
>>  tail -n 5 train.csv 

4.  Print this file in your screen using cat​ now use the less​ command.
>> cat -n train.csv 
>> less train.csv 

5. Can you print only the names of all people in the file?
>> awk -F , '{print $4 $5}' train.csv 

6. Print this file last 5 lines save the output to train_tail.csv
>> tail -n 5 train.csv >> train_trail.csv

7. Print only the lines 3 to 5 of the file?
>> awk 'FNR>=3 && FNR<=5' train.csv >> train_trail.csv 

8. Can you explain the command ​ du -a . | sort -n -r | head -n 20​ and why would
you use it?
>> du -a .     - gives the files size of all files in directory
  sort -n -r   - sorts the files in reverse order of file size
  head -n 5    - gives the first 5 files from the order

9. Split the train.csv file in multiple files with 20 lines each.
>> split -d -l 20 train.csv split



Write loops to iterate over lists
1. Download the ​ ultratrail-du-montblanc.zip​ file from Slack and unzip it to /Users/<myusername>/ultratrail
>> unzip ultratrail-du-montblanc.zip  -d ~/Documents/Homework/ultratrail

2. Write a loop that prints the name, dimension and first 2 lines for each of the ​ .csv files.
>> for x in *.csv; do  echo $x; awk -F, 'END {print NR,"\n" NF}' $x; head -3 $x; done


3. Write a loop that copies each of the . ​ csv​ files with the prefix bkp-​ to a folder /Users/<myusername>/ultratrail/backups​ .
>> for x in *.csv; do cp $x ~/Documents/Homework/ultratrail/backups/bkp-$x; done



Reach
Create scripts to automate basic processes
1. Write a script that suggests the data formats: csv, xlsx, pdf, doc and txt. It should allow the user to pick their desired extension then create a file named selected.<extension selected>​ . Use the read​ command to read the user input!
?????

2. Write a script that keeps only the first N number of lines of all files in '/Users//files_to_clean/*.csv'. N should be an argument passed before starting the script! If other people depend on this being done daily, how can we automate it's daily execution at 8:00AM?
?????



